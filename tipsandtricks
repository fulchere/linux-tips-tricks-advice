linux tips and tricks
my sys info --
>>LinuxMint<<
>>LMDE 3 Cindy<<
>>Release 3<<
>>Codename cindy<<
>>Linux fulcher 4.9.0-9-amd64 #1 SMP Debian 4.9.168-1+deb9u4 (2019-07-19) x86_64 GNU/Linux<<

==print working directory
~$ pwd

==list files in cwd
~$ ls

==change directory
~$ cd nextfolder
or to move one level up
~$ cd ..

==ip information
~$ ifconfig

==using nkrok
navigate to /home/fulcher
~$ ./ngrok http 8080
8080, or whatever port

==to get current linux information
~$ lsb_release -a
and
~$ uname -a

==find a certain word in a set of files or directory
grep -rnw '/path/to/somewhere/' -e 'pattern'

==install package
~$ apt search pkgname
~$ sudo apt install pkgname

==update packages
~$ apt update

==list all packages
~$ apt list

==makefiles in epics iocs
make in top level dir
~$ make
clean unnecessary files
~$ make distclean

==make top level dir from bottom level dir
~$ make -C ../../

==unzip .tar.gz or .tar.xz files
~$ tar -xvzf filename.tar.gz
or if .xz
~$ tar -xvxf filename.db.tar.xz

==python virtual enviroment
navigate to bin folder where the activate file is
~$ source activate
to leave the virtual environment
~$ deactivate

==run .sh file
~$ bash filename.sh

==creating python virtual env
~$ python3 -m venv env
to activate it
~$ source env/bin/activate
to deactivate
~$ deactivate

==within virtual env
you can use pip, examples graphene and requests
~$ pip install graphene
~$ pip install requests

==python Conda package manager
https://docs.conda.io/en/latest/miniconda.html

==switching between python3.7 (latest, conda virtualenv)
~$ conda activate
and to return to normal
~$ conda deactivate

==setting environment variables
example setting the FLASK_APP env var to app.py
~$ export FLASK_APP=app.py

==flask debug mode
~$ export FLASK_ENV=development

==do not do
~$ sudo make
or
~$ sudo make install
as this could write into system files (sudo access),
make sure you have available
~$ make uninstall

==list availabel make targets
double press tab
~$ make \t\t

==make a file executable (./)
~$ chmod +x filename
example
~$ chmod +x tips.sh

==show hidden files and directories
ctrl + h

==make bash file accessable from home directory (~)
in .bashrc file (in home directory, hidden file) at the end put
export PATH=$PATH:/PATH/TO/BASH/FILE
and in the actual .sh file at the above dir put
#!/bin/bash
cd PATH/TO/FILE
xed filename
 
==list available autocompletes
if you double press tab, you get a list
of all available autocompletes 
examples:
if you have four files with names that start with s
then if you double press tab (\t\t) then it lists them
~$ cd s 
outputs -> shell.sh seashore.sh sally.sh she.sh

==git max file storage of 100mb
can use git lfs (large file storage) if needed

==git create new branch
~$ git checkout -b nameofnewbranch
then to merge to original (master)
~$ git checkout master
then to merge your branch and master
~$ git merge nameofnewbranch

==create python ioc
list types
~$ makeBaseApp -l
create all except iocBoot folder
~$ makeBaseApp -t diagPyDevSup something-ioc
create iocBoot folder
~$ makeBaseApp -i -t diagPyDevSup something-ioc

==pretty print json in python
print(json.dumps(name_of_json, indent=4, sort_keys=True))
